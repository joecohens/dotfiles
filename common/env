# Set editor
export EDITOR="nvim"

# Set env lang
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"

# Set env Homebrew
export PATH="/usr/local/sbin:$PATH"

# Scripting Composer
export PATH="$HOME/.composer/vendor/bin:$PATH"

# Scripting NVM With Homebrew
export NVM_DIR="$HOME/.nvm"
[ -s "$(brew --prefix)/opt/nvm/nvm.sh" ] && . "$(brew --prefix)/opt/nvm/nvm.sh" # This loads nvm
[ -s "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm" ] && . "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# Scripting rbenv
# eval "$(rbenv init -)"

# Scripting GO
export GOPATH="$HOME/.go"
export GOROOT=/usr/local/opt/go/libexec
export PATH="$PATH:$GOPATH/bin"
export PATH="$PATH:$GOROOT/bin"

# Scripting Cargo
export PATH="$HOME/.cargo/bin:$PATH"

# Setting up the VirtualEnv for python
# export WORKON_HOME="$HOME/.virtualenvs"
# export PIP_VIRTUALENV_BASE=$WORKON_HOME
# export PIP_RESPECT_VIRTUALENV=true
# export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3

# if [[ -r "/usr/local/bin/virtualenvwrapper.sh" ]]; then
#         source "/usr/local/bin/virtualenvwrapper.sh"
# else
#         echo "WARNING: Can't find virtualenvwrapper.sh"
# fi

# Setting up fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
